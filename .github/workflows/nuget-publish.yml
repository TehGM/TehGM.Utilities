name: NuGet Publish

on:
  workflow_dispatch:
  # all inputs default to push all - if package exists already, it'll be skipped anyway
    inputs:
      publishUniqueIDs:
        description: 'Publish TehGM.Utilities.UniqueIDs (Y/N)?'
        required: true
        default: 'Y'
      publishLogging:
        description: 'Publish TehGM.Utilities.Logging (Y/N)?'
        required: true
        default: 'Y'
      publishRandomization:
        description: 'Publish TehGM.Utilities.Randomization (Y/N)?'
        required: true
        default: 'Y'
      publishTime:
        description: 'Publish TehGM.Utilities.Time (Y/N)?'
        required: true
        default: 'Y'
      publishTimeJsonNet:
        description: 'Publish TehGM.Utilities.Time.JsonNet (Y/N)?'
        required: true
        default: 'Y'
      publishValidation:
        description: 'Publish TehGM.Utilities.Validation (Y/N)?'
        required: true
        default: 'Y'
      publishMetapackage:
        description: 'Publish TehGM.Utilities metapackage (Y/N)?'
        required: true
        default: 'Y'

jobs:
  nuget-publish:
    runs-on: ubuntu-latest

    steps:
      # Prepare environment
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          source-url: https://api.nuget.org/v3/index.json
          dotnet-version: 6.0.x
        env:
          NUGET_AUTH_TOKEN: ${{secrets.NUGET_TOKEN}}
      - name: Install dependencies
        run: dotnet restore
      - name: Setup latest NuGet preview version
        uses: NuGet/setup-nuget@v1.0.5
        with:
          nuget-version: 'preview'
      
      # Publish each package
      - name: Publish TehGM.Utilities.UniqueIDs
        if: github.event.inputs.publishUniqueIDs == 'Y'
        run: |
          mkdir __out
          dotnet pack TehGM.Utilities.UniqueIDs -c Release -o __out --no-restore
          dotnet nuget push "./__out/*.nupkg" --skip-duplicate --no-symbols true --api-key ${{secrets.NUGET_TOKEN}}
          rm -rf __out
      - name: Publish TehGM.Utilities.Logging
        if: github.event.inputs.publishLogging == 'Y'
        run: |
          mkdir __out
          dotnet pack TehGM.Utilities.Logging -c Release -o __out --no-restore
          dotnet nuget push "./__out/*.nupkg" --skip-duplicate --no-symbols true --api-key ${{secrets.NUGET_TOKEN}}
          rm -rf __out
      - name: Publish TehGM.Utilities.Randomization
        if: github.event.inputs.publishRandomization == 'Y'
        run: |
          mkdir __out
          dotnet pack TehGM.Utilities.Randomization -c Release -o __out --no-restore
          dotnet nuget push "./__out/*.nupkg" --skip-duplicate --no-symbols true --api-key ${{secrets.NUGET_TOKEN}}
          rm -rf __out
      - name: Publish TehGM.Utilities.Time
        if: github.event.inputs.publishTime == 'Y'
        run: |
          mkdir __out
          dotnet pack TehGM.Utilities.Time -c Release -o __out --no-restore
          dotnet nuget push "./__out/*.nupkg" --skip-duplicate --no-symbols true --api-key ${{secrets.NUGET_TOKEN}}
          rm -rf __out
      - name: Publish TehGM.Utilities.Time.JsonNet
        if: github.event.inputs.publishTimeJsonNet == 'Y'
        run: |
          mkdir __out
          dotnet pack TehGM.Utilities.Time.JsonNet -c Release -o __out --no-restore
          dotnet nuget push "./__out/*.nupkg" --skip-duplicate --no-symbols true --api-key ${{secrets.NUGET_TOKEN}}
          rm -rf __out
      - name: Publish TehGM.Utilities.Validation
        if: github.event.inputs.publishValidation == 'Y'
        run: |
          mkdir __out
          dotnet pack TehGM.Utilities.Validation -c Release -o __out --no-restore
          dotnet nuget push "./__out/*.nupkg" --skip-duplicate --no-symbols true --api-key ${{secrets.NUGET_TOKEN}}
          rm -rf __out
      - name: Publish TehGM.Utilities metapackage
        if: github.event.inputs.publishMetapackage == 'Y'
        run: |
          mkdir __out
          nuget pack "TehGM.Utilities/TehGM.Utilities.nuspec" -Exclude "*.*" -BasePath "TehGM.Utilities" -NonInteractive -OutputDirectory __out
          dotnet nuget push "./__out/*.nupkg" --skip-duplicate --no-symbols true --api-key ${{secrets.NUGET_TOKEN}}
          rm -rf __out
